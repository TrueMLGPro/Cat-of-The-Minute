{"version":3,"sources":["Photo.js","PhotoContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Photo","props","className","src","url","alt","PhotoContainer","photos","map","photo","key","App","state","color","seconds","tick","bind","a","this","sendRequest","interval","setInterval","setState","clearTimeout","timer","fetch","then","response","console","log","status","ok","Error","json","allData","catch","err","message","Fragment","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAUeA,EARD,SAACC,GACb,OACE,6BACE,yBAAKC,UAAU,kCAAkCC,IAAKF,EAAMG,IAAKC,IAAI,UCU5DC,EAZQ,SAAAL,GAOrB,OACE,6BANOA,EAAMM,OAAOC,KAAI,SAAAC,GACtB,OAAO,kBAAC,EAAD,CAAOC,IAAKD,EAAML,IAAKA,IAAKK,EAAML,WC0DhCO,G,wDA1Db,WAAYV,GAAQ,IAAD,8BACjB,cAAMA,IACHW,MAAQ,CACZC,MAAO,UACPN,OAAQ,GACLO,QAASb,EAAMa,SAEjB,EAAKC,KAAO,EAAKA,KAAKC,KAAV,gBAPK,E,4FAUpB,iCAAAC,EAAA,sDACGC,KAAKC,cACPD,KAAKE,SAAWC,aAAY,kBAAM,EAAKF,gBAAe,KAFvD,gD,wEAKC,WACMD,KAAKN,MAAME,QAAU,EACvBI,KAAKI,SAAS,CAACR,QAASI,KAAKN,MAAME,QAAU,IAE7CI,KAAKI,SAAS,CAACR,QAAS,O,gEAI5B,iCAAAG,EAAA,sDACEM,aAAaL,KAAKM,OAClBN,KAAKI,SAAS,CAACR,QAAS,KACxBI,KAAKM,MAAQH,YAAYH,KAAKH,KAAM,KACpCU,MAAM,8CACDC,MAAK,SAAAC,GAEJ,GADAC,QAAQC,IAAI,WAAYF,EAAUA,EAASG,SACtCH,EAASI,GACZ,MAAMC,MAAM,0CAA2CL,EAASG,QAElE,OAAOH,EAASM,OACjBP,MAAK,SAAAQ,GACJ,EAAKZ,SAAS,CAACf,OAAQ2B,OAExBC,OAAM,SAAAC,GACL,MAAMJ,MAAMI,EAAIC,eAfxB,gD,0EAoBD,WACC,OACC,kBAAC,IAAMC,SAAP,KACC,yBAAKpC,UAAU,OACd,4CACA,iEACA,uGACK,kBAAC,EAAD,CAAgBK,OAAQW,KAAKN,MAAML,SACnC,gDAAsBW,KAAKN,MAAME,QAAjC,kB,GApDQyB,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.fa70df48.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Photo = (props) => {\r\n  return (\r\n    <div>\r\n      <img className=\"imageCat border-gradient-purple\" src={props.url} alt=\"Cat\"/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Photo;","import React from 'react'\r\nimport Photo from './Photo'\r\n\r\nconst PhotoContainer = props => {\r\n  const displayPhotos = () => {\r\n    return props.photos.map(photo => {\r\n      return <Photo key={photo.url} url={photo.url}/>;\r\n    });\r\n  };\r\n\r\n  return(\r\n    <div>{displayPhotos()}</div>\r\n  );\r\n};\r\n\r\nexport default PhotoContainer;","import React, { Component } from 'react';\nimport PhotoContainer from './PhotoContainer';\nimport './App.css';\nimport './index.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\t\tthis.state = {\n\t\t\tcolor: \"#252930\",\n\t\t\tphotos: [],\n      seconds: props.seconds\n\t\t};\n    this.tick = this.tick.bind(this)\n\t}\n\t\n\tasync componentDidMount() {\n    this.sendRequest()\n\t\tthis.interval = setInterval(() => this.sendRequest(), 60000);\n\t}\n\n  tick() {\n    if (this.state.seconds > 0) {\n      this.setState({seconds: this.state.seconds - 1})\n    } else {\n      this.setState({seconds: 60})\n    }\n  }\n\n  async sendRequest() {\n    clearTimeout(this.timer);\n    this.setState({seconds: 60});\n    this.timer = setInterval(this.tick, 1000);\n    fetch(\"https://api.thecatapi.com/v1/images/search\")\n        .then(response => {\n          console.log(\"Response\", response, response.status);\n          if (!response.ok) {\n            throw Error(\"Fetching an image failed, status code: \", response.status);\n          }\n          return response.json()\n        .then(allData => {\n          this.setState({photos: allData});\n          })\n        .catch(err => {\n          throw Error(err.message);\n          })\n        });\n  }\n\t\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<h1>Hello there!</h1>\n\t\t\t\t\t<h2>Welcome to the Cat of the Minute!</h2>\n\t\t\t\t\t<h2>A website which displays a changing cat picture or GIF every 60 seconds</h2>\n          <PhotoContainer photos={this.state.photos} />\n          <h2>New cat image in {this.state.seconds} seconds</h2>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\t\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}